      !-------------------------------------------------------------------------
      !  Subroutine   :                    ppm_rc_FisherYatesShuffle
      !-------------------------------------------------------------------------
      ! Copyright (c) 2016 MOSAIC Group (MPI-CBG Dresden)
      !
      !
      ! This file is part of the PPM_RC program.
      !
      ! PPM_RC is free software: you can redistribute it and/or modify
      ! it under the terms of the GNU Lesser General Public License
      ! as published by the Free Software Foundation, either
      ! version 3 of the License, or (at your option) any later
      ! version.
      !
      ! PPM_RC is distributed in the hope that it will be useful,
      ! but WITHOUT ANY WARRANTY; without even the implied warranty of
      ! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
      ! GNU General Public License for more details.
      !
      ! You should have received a copy of the GNU General Public License
      ! and the GNU Lesser General Public License along with PPM_RC. If not,
      ! see <http://www.gnu.org/licenses/>.
      !-------------------------------------------------------------------------
      !  MOSAIC Group
      !  Max Planck Institute of Molecular Cell Biology and Genetics
      !  Pfotenhauerstr. 108, 01307 Dresden, Germany
      !
      !  Author           - y.afshar           Apr   2016
      !-------------------------------------------------------------------------

      !-------------------------------------------------------------------------
      !  Subroutine   :                    ppm_rc_FisherYatesShuffle
      !-------------------------------------------------------------------------
      !
      !  Purpose      : The Fisher-Yates shuffle is used to permute randomly
      !                 given input array.
      !
      !  Input/output : a
      !
      !  Note         : The permutations generated by this algorithm occur with
      !                 the same probability.
      !
      !  References   : R. Durstenfeld, "Algorithm 235: Random permutation"
      !                 Communications of the ACM, 7 (1964), p. 420
      !
      !  Revisions    :
      !-------------------------------------------------------------------------

      SUBROUTINE ppm_rc_FisherYatesShuffle(a)
        USE ppm_rc_module_rnd, ONLY : ppm_rc_Saru_PRNG
        IMPLICIT NONE
        !-------------------------------------------------------------------------
        !  Includes
        !-------------------------------------------------------------------------
        !-------------------------------------------------------------------------
        !  Arguments
        !-------------------------------------------------------------------------
        INTEGER, DIMENSION(:), INTENT(INOUT) :: a
        !!! Input array
        !-------------------------------------------------------------------------
        !  Local variables
        !-------------------------------------------------------------------------
        REAL :: r

        INTEGER :: i,idx,temp

        DO i = SIZE(a),2,-1
           r=ppm_rc_Saru_PRNG()
           idx=INT(r*i) + 1
           temp  =a(idx)
           a(idx)=a(i)
           a(i)  =temp
        ENDDO

        !-------------------------------------------------------------------------
        !  Return
        !-------------------------------------------------------------------------
        RETURN
      END SUBROUTINE ppm_rc_FisherYatesShuffle

      SUBROUTINE ppm_rc_FisherYatesShuffle_(a,asize)
        USE ppm_rc_module_rnd, ONLY : ppm_rc_Saru_PRNG
        IMPLICIT NONE
        !-------------------------------------------------------------------------
        !  Includes
        !-------------------------------------------------------------------------
        !-------------------------------------------------------------------------
        !  Arguments
        !-------------------------------------------------------------------------
        INTEGER, DIMENSION(:), INTENT(INOUT) :: a
        !!! Input array
        INTEGER,               INTENT(IN   ) :: asize
        !-------------------------------------------------------------------------
        !  Local variables
        !-------------------------------------------------------------------------
        REAL :: r

        INTEGER :: i,idx,temp

        DO i = asize,2,-1
           r=ppm_rc_Saru_PRNG()
           idx=INT(r*i) + 1
           temp  =a(idx)
           a(idx)=a(i)
           a(i)  =temp
        ENDDO

        !-------------------------------------------------------------------------
        !  Return
        !-------------------------------------------------------------------------
        RETURN
      END SUBROUTINE ppm_rc_FisherYatesShuffle_
